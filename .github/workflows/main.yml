name: Buildrunner

on: [push]

jobs:
  build:

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    env:
      BUILDROOT: "buildroot_${{ matrix.platform }}"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name:  Install pre-dependencies
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
          echo "nothing to install"
         elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install autoconf automake libtool jq
         else
          echo "$RUNNER_OS not supported"
          exit 1
         fi
      shell: bash
    - name: prepre buildroot
      run: mkdir $BUILDROOT
    - name: autogen
      run: |
        git tag | grep -v '\.' | while read t; do git tag -d $t; done
        ./autogen.sh --enable-static --disable-shared
    - name: make
      run: make -j || make
    - name: make install
      run: make DESTDIR=$GITHUB_WORKSPACE/$BUILDROOT install
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BUILDROOT }}
        path: ${{ env.BUILDROOT }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Download ubuntu artifact
      uses: actions/download-artifact@v4
      with:
        name: buildroot_ubuntu-latest   
        path: buildroot_ubuntu-latest    
    - name: Download macos artifact
      uses: actions/download-artifact@v4
      with:
        name: buildroot_macos-latest
        path: buildroot_macos-latest
    - name: Set env vars and zip
      run: |
        echo "BUILD_VERSION_NUM=$(echo "$(git rev-list --count HEAD | tr -d '\n')")" >> $GITHUB_ENV
        echo "BUILD_VERSION_SHA=$(echo "$(git rev-parse HEAD | tr -d '\n'])")" >> $GITHUB_ENV
        echo "BUILD_VERSION_STR=$(echo "$(git rev-list --count HEAD | tr -d '\n')-$(git rev-parse HEAD | tr -d '\n'])")" >> $GITHUB_ENV
        echo "COMMIT_MSG=$(echo "$(git log -1 --pretty=%B)")" >> $GITHUB_ENV
        zip -r buildroot_macos-latest.zip buildroot_macos-latest
        zip -r buildroot_ubuntu-latest.zip buildroot_ubuntu-latest
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: false
        draft: false
        tag_name: ${{ env.BUILD_VERSION_NUM }}
        name: Build ${{ env.BUILD_VERSION_STR }}
        body: ${{ env.COMMIT_MSG }}
        files: |
          buildroot_ubuntu-latest.zip
          buildroot_macos-latest.zip